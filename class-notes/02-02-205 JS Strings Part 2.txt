

RECAP: 

Changing cases: 
toUpperCase(); 
toLowerCase(); 


Extract Characters: 
[] --> property access 
at(); [most useful and used]
charAt(); 
charCodeAt(); 

First vs Last Characters in a Stirn 
BEFORE: 
str[0]; // first char
str[str.length -1];  --> last char

AFTER: 
str[0]; //first char
str.at(-1); // last char

'Hi' [3]; // undefined
'Hi'.charAt(3); // ' ' 
'Hi'..at(3)// undefined 

Searching: 
startsWith(); ==> Boolean
endsWith(); ==> Boolean
includes(); ==> Boolean 
search(); ==> Number [if not found = -1 ]
indexOf(); ==> Number [if not found = -1 ]
lastIndexOf(); ==> Number [if not found = -1 ]


Trimming: 
trim(); 
trimStart(); 
trimEnd(); 


Extracting Substring: 
slice(); --> method most commonly used
Substring(); --> 

Do they work with negative indices? 
slice()  --> YES 
substring()  --> NO, it converts to ZERO 

How they act when startIndex is greater than endIndex? 
str.slice(5, 3); // '' 
str.substring(5,3); // str.substring(3, 5); 


const appDate = '2025-02-14'.split('-'); 

let expectedDate = ` ${appDate [1]}/${appDate [2]}/${appDate [0]}`; 

expectedDate ==- 02/14/2025


let str1 = 'abc'; 
let str2 = '123'; 

str1 + str2; // 'abc123' 
`${str1}${str2}; // 'abc123' 
str1.concat(str2); // 'abc123' 

'John'.concat(' ', 'is', ' ', '25', 'years old.'); 

repeat() method

let str = 'ABC';

let res = str.repeat(2); 'ABCABC' 