Mentoring Homework/Notes: 
    - SDET (Software Development Engineer in Test) [also known as Quality Assurance]==> a tech professional who combines software development w/ testing 
        - they're involved in both writing software & creating tests to make sure it works well 
        - crucial b/c --> helps ensure that software is reliable + free from errors 
        - testers interact w/ software as end-users would --> exploring diff.features/inputting data/verifying system behavior 
        - Important SDET Tasks: 
            1. developing automation frameworks --> build systems that automatically test software
            2. writing/executing test cases --> create tests to automatically check if software works as expeced 
            3. participating in software development --> works closely w/ other developers + PMs 
            4. improve product quality 
        
        - Expectiations from SDETs: 
            1. find potential issues/bugs early 
            2. maintain quality work 
            3. keep learning 

    - Software Development vs. Software Testing: 
        - software development --> actual process of building a product or an application from scratch 
        - software testing --> critical phase of SDLC + focus on ensuring software quality and reliability 

    - Manual Testing vs. Automation Testing: 
        - manual testing --> involves manual execution of test cases by human testers to validate various aspects of the software [functionality + usability + performance]
            - requires human judgement + creativity + attention to detail 
        - automation testing --> involves the use of specialized tools and scripts to automate the execution of test cases 
            - helps accelerate the testing process + improve test coverage + reduce time/effort required for repetitive tasks 
            - requires upfront investment in developing test scripts and maintaining test suites 

    - Test Automation: 
        - involves using specialized software tools to execute tests on other software applications automatically
        - Why choose automation over manual testing: 
            1. It's faster --> reduces testing time + accelerates development cycle 
            2. It's more accurate --> eliminates human errors (consistent + reliable)
            3. It's cost-effective --> reduces the need for repetitive manual testing + time-saving 

        - Tools in Test Automation:   
            1. Appium: 
                - cross-platform (ideal for mobile app testing onboth iOS and Android)
                - you can use the same APIs across different mobile operating systems 
                - open-source 
            2. Cypress: 
                - quick set-up 
                - fast execution (runs tests quickly)'
                - developer-friendly 
            3. Playwright: 
                - multi-browser support 
                - cross-brower testing 
                - reliable 
            4. Selenium 
                - versatile 
                - real-world simulation 
                - also open-source 


Questions to be ready for:
1. Tell the difference between functional vs non-functional testing?

So, functional testing -->  checks WHAT the system does
    - it verifies that the software works according to specific functional requirements 
    - focuses on features/functions --> login/form submissions/navigation 
        - EX: Can a user login with the right usernames/password? 

    - focuses on verifying the functionality of the software system
    - tested to ensure that the system works as intended and meets the functional requirements specified by stakeholders 
    - concerned with what a system DOES + how it performs its functions 
    - 
    - EX:   
        Login page of a website --> functional requirements ==> user should be able to enter their username/password 

Non-functional testing --> checks HOW the system performs [focuses on the performance/usability]
    - focuses on evaluating the non-functional aspects of the software system
         - EX: Does the website load within 2 seconds under heavy traffic? 
    - includes testing for performance + usability + reliability + scaibilty + security 
    - concered with how well a system performs its functions [rather than what it does]
    - EX: 
        website should be able to load within a certain amount of time 

2. Tell the difference between Unit vs Integration testing?

    Unit testing [developers!]--> checks individual pieces of code (like functions or methods)
                        - tests individual components of functions of the software in isolation 
                        - focuses on small units 
        VS. 
    Integration testing [testers!] --> checks how different parts work together + tests how different components work together 
                        - EX: checks to see if login page works w/ database 
                        - verifies how these components work together 

3. Tell the difference between Smoke vs Regression vs Sanity testing?
    
    Smoke Testing-->  a basic check to see if the main features work after a new build 
                        - a testing type that is conducted to ensure that the basic/essential functionalities of an application or system are working as expected 
                        - "Is the app stable enough to test further?" OR "Does the app open and not crash?"
                        - a quick check to ensure that the most critical functions of the software work after changers or features added before moving on or moving onto to more in-depth testing 
        VS. 
    Regression Testing --> checks if new changes broke anything that used to work 
                         - retests the entire aplication to ensure that new changes have not affected existing functionalities 
                              - EX: you fixed a bug that had to deal with adding items to a cart --> can the user still logout? can a user still sign up? 
                        
                        
                        - runs old test cases after updates 
                        - software testing type that ensures that changes/modifications to an existing app do not introduce new defects
        VS. 
    Sanity Testing --> a quick check after small changes to make sure they didn't break anything specific (quick, fast check after a small bug/update)
                        - a type of testing that is performed quickly to determine particular functionality or a small section of software is working as expected after
                        minor changes 
                          
                            - EX: after finding a bug in an application --> sanity testing --> opening up the app and making sure it doesn't crash anymore 

                        - more focused than smoke, less detailed than regression
                        - narrow form of regression testing --> checks specific areas of the software that were modified/fixed after a defect is founf 
                        




Testing Types: 
    - Functional vs. Non-Functional Testing Types   
        - Functional --> Verify that a user can login to your app w/ valid credentials 
        - Non-Functional --> Verify 10 thousand of people can checkout at the same time 
        - Non-Functional --> Can thousands of people start Mock Interview at the same time 
            - Security and performance 

        Performance Testing: JMeter, BlazeMeter, LoadRunner, NeoLoad 


FUNCTIONAL TESTING: Unit, Component, Integration, Smoke, Regression, Sanity, 
User Acceptance Testing (UAT), E2E, A/B 

UAT: Alpha + Beta Testing 
   

    1. White-Box Testing ==> You test the units directly against the developer source code - you have to
                             read and understand developer code in order to do this 
        - These tests are stored in developer's repo
        - Mostly written by developers, BUT testers can also be involved 
        - Developers test their individual components w/ Unit Tests (Component Tests) 
        Unit Testing

    2. Black-Box Testing ==> testing developer's code indirectly in a seperate repository
        - testers will not need to understand developer's source code 
        Everything else: 
            - Smoke ==> Testing most critical functionalities of the app to make sure it is
                ready for heavy tests. 
                    - 5 - 20 Most critical-main-major test cases 
                - runs daily 
                - smoke tests are usually automated 
           
            - Regression ==> Testing all the features
                - usually we run regression after a new change has been merged 
                - we make sure new changes (new feature) does NOT break existing ones 
                - regression tests are also automated. (There will be manual effort as well)
            
            - Sanity ==> usually executed whenever a bug is fixed. You test the fix and just 
                a bit more testing around the same feature or component

            NOTE: We testers usually Smoke, Regression, and Sanity Testing in Dev and QA 
                environments. Smoke can also be executed in STG (staging)

            - UAT (user Acceptance Testing) ==> usually performed in STG. We don't do it in DEV or QA environments. 
                1. Alpha Testing --> comapny invites some UAT testers to office and they run tests for the application. Internal 
                2. Beta Testing --> company make a beta release and publish new features to public and thousands of people 
                    uses the new features and provide feedback 

        1. Unit testing ==> smallest unit (calculation function)
            - too many tests running fast 
        2. Component Testing ==> Testing multiple units together, less tests compared to 
            Unit tests and still running fast 
        3. Integration Testing ==> Testing few components together 
            - Login and update your profile picture
            - Search product and add to cart 
            - Less tests compared to Component Tests, slow as well. 
        4. End to End Testing ==> Testing user flows 
            - very few tests, slowest test 